{"version":3,"sources":["utils/user.ts","components/id-select.tsx","components/user-select.tsx","screens/project-list/search-panel.tsx","components/pin.tsx","utils/reorder.ts","utils/use-optimistic-options.ts","utils/project.ts","utils/url.ts","screens/project-list/util.ts","screens/project-list/list.tsx","screens/project-list/index.tsx","utils/task.ts","screens/kanban/util.ts","utils/task-type.ts","assets/task.svg","assets/bug.svg","screens/kanban/create-task.tsx","components/mark.tsx","utils/kanban.ts","components/drag-and-drop.tsx","screens/kanban/kanban-column.tsx","components/task-type-select.tsx","screens/kanban/search-panel.tsx","screens/kanban/create-kanban.tsx","utils/epic.ts","components/epic-select.tsx","screens/kanban/task-modal.tsx","screens/kanban/index.tsx","screens/epic/util.ts","screens/epic/create-epic.tsx","screens/epic/index.tsx","screens/project/index.tsx","screens/project-list/project-modal.tsx","components/project-popover.tsx","components/user-popover.tsx","authenticated-app.tsx"],"names":["useUsers","param","client","useHttp","useQuery","data","IdSelect","props","value","onChange","defaultOptionName","options","restProps","_objectWithoutProperties","_excluded","React","createElement","Select","Object","assign","length","toNumber","undefined","Option","map","option","key","id","name","isNaN","Number","UserSelect","users","SearchPanel","_ref","setParam","Form","style","marginBottom","layout","Item","Input","placeholder","type","evt","_objectSpread","target","personId","Pin","checked","onCheckedChange","Rate","count","num","reorder","fromId","referenceId","list","copiedList","_toConsumableArray","movingItemIndex","findIndex","item","insertAfter","targetIndex","insertBefore","from","to","toItem","removedItem","splice","toIndex","indexOf","useConfig","queryKey","callback","queryClient","useQueryClient","onSuccess","invalidateQueries","onMutate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","previousItems","wrap","_context","prev","next","getQueryData","setQueryData","old","abrupt","stop","onError","error","newItem","context","useDeleteConfig","filter","useEditConfig","useAddConfig","concat","useProjects","cleanObject","useEditProject","useMutation","params","method","useAddProject","useProject","enabled","Boolean","useUrlQueryParam","keys","_useSearchParams","useSearchParams","searchParams","_slicedToArray","setSearchParams","useSetUrlSearchParam","_useState","useState","stateKeys","useMemo","subset","fromEntries","_useSearchParams3","_useSearchParams4","setSearchParam","o","useProjectsSearchParams","_useUrlQueryParam","_useUrlQueryParam2","useProjectsQueryKey","_useProjectsSearchPar","useProjectModal","_useUrlQueryParam3","_useUrlQueryParam4","projectCreate","setProjectCreate","_useUrlQueryParam5","_useUrlQueryParam6","editingProjectId","setEditingProjectId","setUrlParams","_useProject","editingProject","isLoading","projectModalOpen","open","close","startEdit","List","mutate","Table","rowKey","pagination","columns","title","disabled","render","project","pin","sorter","a","b","localeCompare","Link","String","dataIndex","_users$find","find","user","created","dayjs","format","More","_ref2","_useDeleteProject","useDeleteProject","deleteProject","Dropdown","overlay","Menu","onClick","Modal","confirm","content","okText","onOk","confirmDeleteProject","ButtonNoPadding","ProjectListScreen","useDocumentTitle","_useProjectsSearchPar2","_useProjects","useDebounce","Profiler","ScreenContainer","Row","between","ErrorBox","loading","dataSource","whyDidYouRender","useTasks","debouncedParam","useReorderTask","kanbanId","toKanbanId","useReorderTaskConfig","useProjectIdInUrl","_pathname$match","useLocation","pathname","match","useProjectInUrl","useKanbanSearchParams","projectId","useKanbansQueryKey","useTasksSearchParams","typeId","processorId","tagId","useTasksQueryKey","useTasksModal","editingTaskId","setEditingTaskId","_useTask","useTask","editingTask","useCallback","useTaskTypes","CreateTask","_useState2","setName","addTask","useAddTask","mutateAsync","_useState3","_useState4","inputMode","setInputMode","submit","apply","arguments","toggle","mode","useEffect","Card","onBlur","autoFocus","onPressEnter","Mark","keyword","Fragment","arr","split","str","index","color","useKanbans","useReorderKanban","useReorderKanbanConfig","Drop","children","Droppable","provided","isValidElement","cloneElement","droppableProps","ref","innerRef","DropChild","forwardRef","_props$provided","_excluded2","Drag","_ref3","_excluded3","Draggable","draggableProps","dragHandleProps","TaskTypeIcon","_taskTypes$find","taskTypes","taskType","alt","src","taskIcon","bugIcon","TaskCard","task","cursor","KanbanColumn","kanban","allTasks","tasks","Container","TasksContainer","direction","droppableId","minHeight","taskIndex","draggableId","_ref4","useDeleteKanban","Button","cancelText","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","TaskTypeSelect","gap","width","CreateKanban","addKanban","useAddKanban","size","useEpics","EpicSelect","epics","labelCol","span","wrapperCol","TaskModal","_Form$useForm","useForm","form","_useTasksModal","_useEditTask","useEditTask","editTask","editLoading","deleteTask","useDeleteTask","getFieldsValue","setFieldsValue","forceRender","onCancel","resetFields","confirmLoading","visible","initialValues","label","rules","required","message","textAlign","fontSize","KanbanScreen","currentProject","_useKanbans","kanbans","kanbanIsLoading","onDragEnd","useDragEnd","DragDropContext","Spin","ColumnsContainer","display","reorderKanban","reorderTask","_useTasks2$data","source","destination","toId","fromKanbanId","fromTask","toTask","useEpicSearchParams","useEpicsQueryKey","CreateEpic","_useAddEpic","useAddEpic","addEpic","onFinish","values","onClose","_x","Drawer","destroyOnClose","htmlType","EpicScreen","deleteEpic","useDeleteEpic","epicCreateOpen","setEpicCreateOpen","overflow","itemLayout","renderItem","epic","Meta","confirmDeleteEpic","description","start","end","epicId","ProjectScreen","routeType","units","useRouteType","Aside","selectedKeys","Main","Routes","Route","path","element","aside","_templateObject3","ProjectModal","_useProjectModal","_useMutateProject","mutateLoading","then","ProjectPopover","projects","refetch","pinnedProjects","ContentContainer","Typography","Text","Divider","Popover","onVisibleChange","placement","UserPopover","_useUsers","AuthenticatedApp","PageHeader","Header","HeaderLeft","resetRoute","HeaderRight","User","_useAuth","useAuth","logout","e","preventDefault","_templateObject4","main","_templateObject5"],"mappings":"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","file":"static/js/5.81282e8d.chunk.js","sourcesContent":["import { useHttp } from \"utils/http\";\r\nimport { User } from \"types/user\";\r\nimport { useQuery } from \"react-query\";\r\n\r\nexport const useUsers = (param?: Partial<User>) => {\r\n  const client = useHttp();\r\n\r\n  return useQuery<User[]>([\"users\", param], () =>\r\n    client(\"users\", { data: param })\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Raw } from \"types\";\r\nimport { Select } from \"antd\";\r\n\r\ntype SelectProps = React.ComponentProps<typeof Select>;\r\n\r\ninterface IdSelectProps\r\n  extends Omit<SelectProps, \"value\" | \"onChange\" | \"options\"> {\r\n  value?: Raw | null | undefined;\r\n  onChange?: (value?: number) => void;\r\n  defaultOptionName?: string;\r\n  options?: { name: string; id: number }[];\r\n}\r\n\r\n/**\r\n * value 可以传入多种类型的值\r\n * onChange只会回调 number|undefined 类型\r\n * 当 isNaN(Number(value)) 为true的时候，代表选择默认类型\r\n * 当选择默认类型的时候，onChange会回调undefined\r\n * @param props\r\n * @constructor\r\n */\r\nexport const IdSelect = (props: IdSelectProps) => {\r\n  const { value, onChange, defaultOptionName, options, ...restProps } = props;\r\n  return (\r\n    <Select\r\n      value={options?.length ? toNumber(value) : 0}\r\n      onChange={(value) => onChange?.(toNumber(value) || undefined)}\r\n      {...restProps}\r\n    >\r\n      {defaultOptionName ? (\r\n        <Select.Option value={0}>{defaultOptionName}</Select.Option>\r\n      ) : null}\r\n      {options?.map((option) => (\r\n        <Select.Option key={option.id} value={option.id}>\r\n          {option.name}\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nconst toNumber = (value: unknown) => (isNaN(Number(value)) ? 0 : Number(value));\r\n","import React from \"react\";\r\nimport { useUsers } from \"utils/user\";\r\nimport { IdSelect } from \"components/id-select\";\r\n\r\nexport const UserSelect = (props: React.ComponentProps<typeof IdSelect>) => {\r\n  const { data: users } = useUsers();\r\n  return <IdSelect options={users || []} {...props} />;\r\n};\r\n","import React from \"react\";\r\nimport { Form, Input } from \"antd\";\r\nimport { UserSelect } from \"components/user-select\";\r\nimport { Project } from \"types/project\";\r\nimport { User } from \"types/user\";\r\n\r\ninterface SearchPanelProps {\r\n  users: User[];\r\n  param: Partial<Pick<Project, \"name\" | \"personId\">>;\r\n  setParam: (param: SearchPanelProps[\"param\"]) => void;\r\n}\r\n\r\nexport const SearchPanel = ({ users, param, setParam }: SearchPanelProps) => {\r\n  return (\r\n    <Form style={{ marginBottom: \"2rem\" }} layout={\"inline\"}>\r\n      <Form.Item>\r\n        {/*setParam(Object.assign({}, param, {name:evt.target.value}))*/}\r\n        <Input\r\n          placeholder={\"项目名\"}\r\n          type=\"text\"\r\n          value={param.name}\r\n          onChange={(evt) =>\r\n            setParam({\r\n              ...param,\r\n              name: evt.target.value,\r\n            })\r\n          }\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <UserSelect\r\n          defaultOptionName={\"负责人\"}\r\n          value={param.personId}\r\n          onChange={(value) =>\r\n            setParam({\r\n              ...param,\r\n              personId: value,\r\n            })\r\n          }\r\n        />\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Rate } from \"antd\";\r\n\r\ninterface PinProps extends React.ComponentProps<typeof Rate> {\r\n  checked: boolean;\r\n  onCheckedChange?: (checked: boolean) => void;\r\n}\r\n\r\nexport const Pin = ({ checked, onCheckedChange, ...restProps }: PinProps) => {\r\n  return (\r\n    <Rate\r\n      count={1}\r\n      value={checked ? 1 : 0}\r\n      onChange={(num) => onCheckedChange?.(!!num)}\r\n      {...restProps}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * 在本地对排序进行乐观更新\r\n * @param fromId 要排序的项目的id\r\n * @param type 'before' | 'after'\r\n * @param referenceId 参照id\r\n * @param list 要排序的列表, 比如tasks, kanbans\r\n */\r\nexport const reorder = ({\r\n  fromId,\r\n  type,\r\n  referenceId,\r\n  list,\r\n}: {\r\n  list: { id: number }[];\r\n  fromId: number;\r\n  type: \"after\" | \"before\";\r\n  referenceId: number;\r\n}) => {\r\n  const copiedList = [...list];\r\n  // 找到fromId对应项目的下标\r\n  const movingItemIndex = copiedList.findIndex((item) => item.id === fromId);\r\n  if (!referenceId) {\r\n    return insertAfter([...copiedList], movingItemIndex, copiedList.length - 1);\r\n  }\r\n  const targetIndex = copiedList.findIndex((item) => item.id === referenceId);\r\n  const insert = type === \"after\" ? insertAfter : insertBefore;\r\n  return insert([...copiedList], movingItemIndex, targetIndex);\r\n};\r\n\r\n/**\r\n * 在list中，把from放在to的前边\r\n * @param list\r\n * @param from\r\n * @param to\r\n */\r\nconst insertBefore = (list: unknown[], from: number, to: number) => {\r\n  const toItem = list[to];\r\n  const removedItem = list.splice(from, 1)[0];\r\n  const toIndex = list.indexOf(toItem);\r\n  list.splice(toIndex, 0, removedItem);\r\n  return list;\r\n};\r\n\r\n/**\r\n * 在list中，把from放在to的后面\r\n * @param list\r\n * @param from\r\n * @param to\r\n */\r\nconst insertAfter = (list: unknown[], from: number, to: number) => {\r\n  const toItem = list[to];\r\n  const removedItem = list.splice(from, 1)[0];\r\n  const toIndex = list.indexOf(toItem);\r\n  list.splice(toIndex + 1, 0, removedItem);\r\n  return list;\r\n};\r\n","import { QueryKey, useQueryClient } from \"react-query\";\r\nimport { reorder } from \"utils/reorder\";\r\nimport { Task } from \"types/task\";\r\n\r\nexport const useConfig = (\r\n  queryKey: QueryKey,\r\n  callback: (target: any, old?: any[]) => any[]\r\n) => {\r\n  const queryClient = useQueryClient();\r\n  return {\r\n    onSuccess: () => queryClient.invalidateQueries(queryKey),\r\n    async onMutate(target: any) {\r\n      const previousItems = queryClient.getQueryData(queryKey);\r\n      queryClient.setQueryData(queryKey, (old?: any[]) => {\r\n        return callback(target, old);\r\n      });\r\n      return { previousItems };\r\n    },\r\n    onError(error: any, newItem: any, context: any) {\r\n      queryClient.setQueryData(queryKey, context.previousItems);\r\n    },\r\n  };\r\n};\r\n\r\nexport const useDeleteConfig = (queryKey: QueryKey) =>\r\n  useConfig(\r\n    queryKey,\r\n    (target, old) => old?.filter((item) => item.id !== target.id) || []\r\n  );\r\nexport const useEditConfig = (queryKey: QueryKey) =>\r\n  useConfig(\r\n    queryKey,\r\n    (target, old) =>\r\n      old?.map((item) =>\r\n        item.id === target.id ? { ...item, ...target } : item\r\n      ) || []\r\n  );\r\nexport const useAddConfig = (queryKey: QueryKey) =>\r\n  useConfig(queryKey, (target, old) => (old ? [...old, target] : []));\r\n\r\nexport const useReorderKanbanConfig = (queryKey: QueryKey) =>\r\n  useConfig(queryKey, (target, old) => reorder({ list: old, ...target }));\r\n\r\nexport const useReorderTaskConfig = (queryKey: QueryKey) =>\r\n  useConfig(queryKey, (target, old) => {\r\n    const orderedList = reorder({ list: old, ...target }) as Task[];\r\n    return orderedList.map((item) =>\r\n      item.id === target.fromId\r\n        ? { ...item, kanbanId: target.toKanbanId }\r\n        : item\r\n    );\r\n  });\r\n","import { useHttp } from \"utils/http\";\r\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\r\nimport {\r\n  useAddConfig,\r\n  useDeleteConfig,\r\n  useEditConfig,\r\n} from \"utils/use-optimistic-options\";\r\nimport { Project } from \"types/project\";\r\nimport { cleanObject } from \"utils/index\";\r\n\r\nexport const useProjects = (param?: Partial<Project>) => {\r\n  const client = useHttp();\r\n\r\n  return useQuery<Project[]>([\"projects\", cleanObject(param)], () =>\r\n    client(\"projects\", { data: param })\r\n  );\r\n};\r\n\r\nexport const useEditProject = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n  return useMutation(\r\n    (params: Partial<Project>) =>\r\n      client(`projects/${params.id}`, {\r\n        method: \"PATCH\",\r\n        data: params,\r\n      }),\r\n    useEditConfig(queryKey)\r\n  );\r\n};\r\n\r\nexport const useAddProject = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n\r\n  return useMutation(\r\n    (params: Partial<Project>) =>\r\n      client(`projects`, {\r\n        data: params,\r\n        method: \"POST\",\r\n      }),\r\n    useAddConfig(queryKey)\r\n  );\r\n};\r\n\r\nexport const useDeleteProject = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n\r\n  return useMutation(\r\n    ({ id }: { id: number }) =>\r\n      client(`projects/${id}`, {\r\n        method: \"DELETE\",\r\n      }),\r\n    useDeleteConfig(queryKey)\r\n  );\r\n};\r\n\r\nexport const useProject = (id?: number) => {\r\n  const client = useHttp();\r\n  return useQuery<Project>(\r\n    [\"project\", { id }],\r\n    () => client(`projects/${id}`),\r\n    {\r\n      enabled: Boolean(id),\r\n    }\r\n  );\r\n};\r\n","import { URLSearchParamsInit, useSearchParams } from \"react-router-dom\";\r\nimport { useMemo, useState } from \"react\";\r\nimport { cleanObject, subset } from \"utils/index\";\r\n\r\n/**\r\n * 返回页面url中，指定键的参数值\r\n */\r\nexport const useUrlQueryParam = <K extends string>(keys: K[]) => {\r\n  const [searchParams] = useSearchParams();\r\n  const setSearchParams = useSetUrlSearchParam();\r\n  const [stateKeys] = useState(keys);\r\n  return [\r\n    useMemo(\r\n      () =>\r\n        subset(Object.fromEntries(searchParams), stateKeys) as {\r\n          [key in K]: string;\r\n        },\r\n      [searchParams, stateKeys]\r\n    ),\r\n    (params: Partial<{ [key in K]: unknown }>) => {\r\n      return setSearchParams(params);\r\n      // iterator\r\n      // iterator: https://codesandbox.io/s/upbeat-wood-bum3j?file=/src/index.js\r\n    },\r\n  ] as const;\r\n};\r\n\r\nexport const useSetUrlSearchParam = () => {\r\n  const [searchParams, setSearchParam] = useSearchParams();\r\n  return (params: { [key in string]: unknown }) => {\r\n    const o = cleanObject({\r\n      ...Object.fromEntries(searchParams),\r\n      ...params,\r\n    }) as URLSearchParamsInit;\r\n    return setSearchParam(o);\r\n  };\r\n};\r\n","import { useSetUrlSearchParam, useUrlQueryParam } from \"utils/url\";\r\nimport { useMemo } from \"react\";\r\nimport { useProject } from \"utils/project\";\r\n\r\n// 项目列表搜索的参数\r\nexport const useProjectsSearchParams = () => {\r\n  const [param, setParam] = useUrlQueryParam([\"name\", \"personId\"]);\r\n  return [\r\n    useMemo(\r\n      () => ({ ...param, personId: Number(param.personId) || undefined }),\r\n      [param]\r\n    ),\r\n    setParam,\r\n  ] as const;\r\n};\r\n\r\nexport const useProjectsQueryKey = () => {\r\n  const [params] = useProjectsSearchParams();\r\n  return [\"projects\", params];\r\n};\r\n\r\nexport const useProjectModal = () => {\r\n  const [{ projectCreate }, setProjectCreate] = useUrlQueryParam([\r\n    \"projectCreate\",\r\n  ]);\r\n  const [{ editingProjectId }, setEditingProjectId] = useUrlQueryParam([\r\n    \"editingProjectId\",\r\n  ]);\r\n  const setUrlParams = useSetUrlSearchParam();\r\n  const { data: editingProject, isLoading } = useProject(\r\n    Number(editingProjectId)\r\n  );\r\n\r\n  const open = () => setProjectCreate({ projectCreate: true });\r\n  const close = () => setUrlParams({ projectCreate: \"\", editingProjectId: \"\" });\r\n  const startEdit = (id: number) =>\r\n    setEditingProjectId({ editingProjectId: id });\r\n\r\n  return {\r\n    projectModalOpen: projectCreate === \"true\" || Boolean(editingProjectId),\r\n    open,\r\n    close,\r\n    startEdit,\r\n    editingProject,\r\n    isLoading,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Dropdown, Menu, Modal, Table } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\nimport { TableProps } from \"antd/es/table\";\r\n// react-router 和 react-router-dom的关系，类似于 react 和 react-dom/react-native/react-vr...\r\nimport { Link } from \"react-router-dom\";\r\nimport { Pin } from \"components/pin\";\r\nimport { useDeleteProject, useEditProject } from \"utils/project\";\r\nimport { ButtonNoPadding } from \"components/lib\";\r\nimport {\r\n  useProjectModal,\r\n  useProjectsQueryKey,\r\n} from \"screens/project-list/util\";\r\nimport { Project } from \"types/project\";\r\nimport { User } from \"types/user\";\r\n\r\ninterface ListProps extends TableProps<Project> {\r\n  users: User[];\r\n}\r\n\r\nexport const List = ({ users, ...props }: ListProps) => {\r\n  const { mutate } = useEditProject(useProjectsQueryKey());\r\n  const pinProject = (id: number) => (pin: boolean) => mutate({ id, pin });\r\n  return (\r\n    <Table\r\n      rowKey={\"id\"}\r\n      pagination={false}\r\n      columns={[\r\n        {\r\n          title: <Pin checked={true} disabled={true} />,\r\n          render(value, project) {\r\n            return (\r\n              <Pin\r\n                checked={project.pin}\r\n                onCheckedChange={pinProject(project.id)}\r\n              />\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: \"名称\",\r\n          sorter: (a, b) => a.name.localeCompare(b.name),\r\n          render(value, project) {\r\n            return (\r\n              <Link to={`projects/${String(project.id)}`}>{project.name}</Link>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: \"部门\",\r\n          dataIndex: \"organization\",\r\n        },\r\n        {\r\n          title: \"负责人\",\r\n          render(value, project) {\r\n            return (\r\n              <span>\r\n                {users.find((user) => user.id === project.personId)?.name ||\r\n                  \"未知\"}\r\n              </span>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          render(value, project) {\r\n            return (\r\n              <span>\r\n                {project.created\r\n                  ? dayjs(project.created).format(\"YYYY-MM-DD\")\r\n                  : \"无\"}\r\n              </span>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          render(value, project) {\r\n            return <More project={project} />;\r\n          },\r\n        },\r\n      ]}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst More = ({ project }: { project: Project }) => {\r\n  const { startEdit } = useProjectModal();\r\n  const editProject = (id: number) => () => startEdit(id);\r\n  const { mutate: deleteProject } = useDeleteProject(useProjectsQueryKey());\r\n  const confirmDeleteProject = (id: number) => {\r\n    Modal.confirm({\r\n      title: \"确定删除这个项目吗?\",\r\n      content: \"点击确定删除\",\r\n      okText: \"确定\",\r\n      onOk() {\r\n        deleteProject({ id });\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <Dropdown\r\n      overlay={\r\n        <Menu>\r\n          <Menu.Item onClick={editProject(project.id)} key={\"edit\"}>\r\n            编辑\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            onClick={() => confirmDeleteProject(project.id)}\r\n            key={\"delete\"}\r\n          >\r\n            删除\r\n          </Menu.Item>\r\n        </Menu>\r\n      }\r\n    >\r\n      <ButtonNoPadding type={\"link\"}>...</ButtonNoPadding>\r\n    </Dropdown>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { SearchPanel } from \"screens/project-list/search-panel\";\r\nimport { List } from \"screens/project-list/list\";\r\nimport { useDebounce, useDocumentTitle } from \"utils\";\r\nimport { useProjects } from \"utils/project\";\r\nimport { useUsers } from \"utils/user\";\r\nimport {\r\n  useProjectModal,\r\n  useProjectsSearchParams,\r\n} from \"screens/project-list/util\";\r\nimport {\r\n  ButtonNoPadding,\r\n  ErrorBox,\r\n  Row,\r\n  ScreenContainer,\r\n} from \"components/lib\";\r\nimport { Profiler } from \"components/profiler\";\r\n\r\n// 状态提升可以让组件共享状态，但是容易造成 prop drilling\r\n\r\n// 基本类型，可以放到依赖里；组件状态，可以放到依赖里；非组件状态的对象，绝不可以放到依赖里\r\n// https://codesandbox.io/s/keen-wave-tlz9s?file=/src/App.js\r\n\r\n// 使用 JS 的同学，大部分的错误都是在 runtime(运行时) 的时候发现的\r\n// 我们希望，在静态代码中，就能找到其中的一些错误 -> 强类型\r\nexport const ProjectListScreen = () => {\r\n  useDocumentTitle(\"项目列表\", false);\r\n\r\n  const { open } = useProjectModal();\r\n\r\n  const [param, setParam] = useProjectsSearchParams();\r\n  const { isLoading, error, data: list } = useProjects(useDebounce(param, 200));\r\n  const { data: users } = useUsers();\r\n\r\n  return (\r\n    <Profiler id={\"项目列表\"}>\r\n      <ScreenContainer>\r\n        <Row marginBottom={2} between={true}>\r\n          <h1>项目列表</h1>\r\n          <ButtonNoPadding onClick={open} type={\"link\"}>\r\n            创建项目\r\n          </ButtonNoPadding>\r\n        </Row>\r\n        <SearchPanel users={users || []} param={param} setParam={setParam} />\r\n        <ErrorBox error={error} />\r\n        <List loading={isLoading} users={users || []} dataSource={list || []} />\r\n      </ScreenContainer>\r\n    </Profiler>\r\n  );\r\n};\r\n\r\nProjectListScreen.whyDidYouRender = false;\r\n","import { useHttp } from \"utils/http\";\r\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\r\nimport { Task } from \"types/task\";\r\nimport {\r\n  useAddConfig,\r\n  useDeleteConfig,\r\n  useEditConfig,\r\n  useReorderTaskConfig,\r\n} from \"utils/use-optimistic-options\";\r\nimport { Project } from \"types/project\";\r\nimport { SortProps } from \"utils/kanban\";\r\nimport { useDebounce } from \"utils/index\";\r\n\r\nexport const useTasks = (param?: Partial<Task>) => {\r\n  const client = useHttp();\r\n  const debouncedParam = { ...param, name: useDebounce(param?.name, 200) };\r\n\r\n  return useQuery<Task[]>([\"tasks\", debouncedParam], () =>\r\n    client(\"tasks\", { data: debouncedParam })\r\n  );\r\n};\r\n\r\nexport const useAddTask = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n\r\n  return useMutation(\r\n    (params: Partial<Task>) =>\r\n      client(`tasks`, {\r\n        data: params,\r\n        method: \"POST\",\r\n      }),\r\n    useAddConfig(queryKey)\r\n  );\r\n};\r\n\r\nexport const useTask = (id?: number) => {\r\n  const client = useHttp();\r\n  return useQuery<Project>([\"task\", { id }], () => client(`tasks/${id}`), {\r\n    enabled: Boolean(id),\r\n  });\r\n};\r\n\r\nexport const useEditTask = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n  return useMutation(\r\n    (params: Partial<Task>) =>\r\n      client(`tasks/${params.id}`, {\r\n        method: \"PATCH\",\r\n        data: params,\r\n      }),\r\n    useEditConfig(queryKey)\r\n  );\r\n};\r\n\r\nexport const useDeleteTask = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n\r\n  return useMutation(\r\n    ({ id }: { id: number }) =>\r\n      client(`tasks/${id}`, {\r\n        method: \"DELETE\",\r\n      }),\r\n    useDeleteConfig(queryKey)\r\n  );\r\n};\r\n\r\nexport const useReorderTask = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n  return useMutation((params: SortProps) => {\r\n    return client(\"tasks/reorder\", {\r\n      data: params,\r\n      method: \"POST\",\r\n    });\r\n  }, useReorderTaskConfig(queryKey));\r\n};\r\n","import { useLocation } from \"react-router\";\r\nimport { useProject } from \"utils/project\";\r\nimport { useUrlQueryParam } from \"utils/url\";\r\nimport { useCallback, useMemo } from \"react\";\r\nimport { useTask } from \"utils/task\";\r\n\r\nexport const useProjectIdInUrl = () => {\r\n  const { pathname } = useLocation();\r\n  const id = pathname.match(/projects\\/(\\d+)/)?.[1];\r\n  return Number(id);\r\n};\r\n\r\nexport const useProjectInUrl = () => useProject(useProjectIdInUrl());\r\n\r\nexport const useKanbanSearchParams = () => ({ projectId: useProjectIdInUrl() });\r\n\r\nexport const useKanbansQueryKey = () => [\"kanbans\", useKanbanSearchParams()];\r\n\r\nexport const useTasksSearchParams = () => {\r\n  const [param] = useUrlQueryParam([\"name\", \"typeId\", \"processorId\", \"tagId\"]);\r\n  const projectId = useProjectIdInUrl();\r\n  return useMemo(\r\n    () => ({\r\n      projectId,\r\n      typeId: Number(param.typeId) || undefined,\r\n      processorId: Number(param.processorId) || undefined,\r\n      tagId: Number(param.tagId) || undefined,\r\n      name: param.name,\r\n    }),\r\n    [projectId, param]\r\n  );\r\n};\r\n\r\nexport const useTasksQueryKey = () => [\"tasks\", useTasksSearchParams()];\r\n\r\nexport const useTasksModal = () => {\r\n  const [{ editingTaskId }, setEditingTaskId] = useUrlQueryParam([\r\n    \"editingTaskId\",\r\n  ]);\r\n  const { data: editingTask, isLoading } = useTask(Number(editingTaskId));\r\n  const startEdit = useCallback(\r\n    (id: number) => {\r\n      setEditingTaskId({ editingTaskId: id });\r\n    },\r\n    [setEditingTaskId]\r\n  );\r\n  const close = useCallback(() => {\r\n    setEditingTaskId({ editingTaskId: \"\" });\r\n  }, [setEditingTaskId]);\r\n  return {\r\n    editingTaskId,\r\n    editingTask,\r\n    startEdit,\r\n    close,\r\n    isLoading,\r\n  };\r\n};\r\n","import { useHttp } from \"utils/http\";\r\nimport { useQuery } from \"react-query\";\r\nimport { TaskType } from \"types/task-type\";\r\n\r\nexport const useTaskTypes = () => {\r\n  const client = useHttp();\r\n\r\n  return useQuery<TaskType[]>([\"taskTypes\"], () => client(\"taskTypes\"));\r\n};\r\n","export default __webpack_public_path__ + \"static/media/task.8118694e.svg\";","export default __webpack_public_path__ + \"static/media/bug.bc7dca9d.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport { useAddTask } from \"utils/task\";\r\nimport { useProjectIdInUrl, useTasksQueryKey } from \"screens/kanban/util\";\r\nimport { Card, Input } from \"antd\";\r\n\r\nexport const CreateTask = ({ kanbanId }: { kanbanId: number }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const { mutateAsync: addTask } = useAddTask(useTasksQueryKey());\r\n  const projectId = useProjectIdInUrl();\r\n  const [inputMode, setInputMode] = useState(false);\r\n\r\n  const submit = async () => {\r\n    await addTask({ projectId, name, kanbanId });\r\n    setInputMode(false);\r\n    setName(\"\");\r\n  };\r\n\r\n  const toggle = () => setInputMode((mode) => !mode);\r\n\r\n  useEffect(() => {\r\n    if (!inputMode) {\r\n      setName(\"\");\r\n    }\r\n  }, [inputMode]);\r\n\r\n  if (!inputMode) {\r\n    return <div onClick={toggle}>+创建事务</div>;\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Input\r\n        onBlur={toggle}\r\n        placeholder={\"需要做些什么\"}\r\n        autoFocus={true}\r\n        onPressEnter={submit}\r\n        value={name}\r\n        onChange={(evt) => setName(evt.target.value)}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Mark = ({ name, keyword }: { name: string; keyword: string }) => {\r\n  if (!keyword) {\r\n    return <>{name}</>;\r\n  }\r\n  const arr = name.split(keyword);\r\n  return (\r\n    <>\r\n      {arr.map((str, index) => (\r\n        <span key={index}>\r\n          {str}\r\n          {index === arr.length - 1 ? null : (\r\n            <span style={{ color: \"#257AFD\" }}>{keyword}</span>\r\n          )}\r\n        </span>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import { useHttp } from \"utils/http\";\r\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\r\nimport { Kanban } from \"types/kanban\";\r\nimport {\r\n  useAddConfig,\r\n  useDeleteConfig,\r\n  useReorderKanbanConfig,\r\n} from \"utils/use-optimistic-options\";\r\n\r\nexport const useKanbans = (param?: Partial<Kanban>) => {\r\n  const client = useHttp();\r\n\r\n  return useQuery<Kanban[]>([\"kanbans\", param], () =>\r\n    client(\"kanbans\", { data: param })\r\n  );\r\n};\r\n\r\nexport const useAddKanban = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n\r\n  return useMutation(\r\n    (params: Partial<Kanban>) =>\r\n      client(`kanbans`, {\r\n        data: params,\r\n        method: \"POST\",\r\n      }),\r\n    useAddConfig(queryKey)\r\n  );\r\n};\r\n\r\nexport const useDeleteKanban = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n\r\n  return useMutation(\r\n    ({ id }: { id: number }) =>\r\n      client(`kanbans/${id}`, {\r\n        method: \"DELETE\",\r\n      }),\r\n    useDeleteConfig(queryKey)\r\n  );\r\n};\r\n\r\nexport interface SortProps {\r\n  // 要重新排序的 item\r\n  fromId: number;\r\n  // 目标 item\r\n  referenceId: number;\r\n  // 放在目标item的前还是后\r\n  type: \"before\" | \"after\";\r\n  fromKanbanId?: number;\r\n  toKanbanId?: number;\r\n}\r\n\r\nexport const useReorderKanban = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n  return useMutation((params: SortProps) => {\r\n    return client(\"kanbans/reorder\", {\r\n      data: params,\r\n      method: \"POST\",\r\n    });\r\n  }, useReorderKanbanConfig(queryKey));\r\n};\r\n","import React, { ReactNode } from \"react\";\r\nimport {\r\n  Draggable,\r\n  DraggableProps,\r\n  Droppable,\r\n  DroppableProps,\r\n  DroppableProvided,\r\n  DroppableProvidedProps,\r\n} from \"react-beautiful-dnd\";\r\n\r\ntype DropProps = Omit<DroppableProps, \"children\"> & { children: ReactNode };\r\n\r\nexport const Drop = ({ children, ...props }: DropProps) => {\r\n  return (\r\n    <Droppable {...props}>\r\n      {(provided) => {\r\n        if (React.isValidElement(children)) {\r\n          return React.cloneElement(children, {\r\n            ...provided.droppableProps,\r\n            ref: provided.innerRef,\r\n            provided,\r\n          });\r\n        }\r\n        return <div />;\r\n      }}\r\n    </Droppable>\r\n  );\r\n};\r\n\r\ntype DropChildProps = Partial<\r\n  { provided: DroppableProvided } & DroppableProvidedProps\r\n> &\r\n  React.HTMLAttributes<HTMLDivElement>;\r\nexport const DropChild = React.forwardRef<HTMLDivElement, DropChildProps>(\r\n  ({ children, ...props }, ref) => (\r\n    <div ref={ref} {...props}>\r\n      {children}\r\n      {props.provided?.placeholder}\r\n    </div>\r\n  )\r\n);\r\n\r\ntype DragProps = Omit<DraggableProps, \"children\"> & { children: ReactNode };\r\nexport const Drag = ({ children, ...props }: DragProps) => {\r\n  return (\r\n    <Draggable {...props}>\r\n      {(provided) => {\r\n        if (React.isValidElement(children)) {\r\n          return React.cloneElement(children, {\r\n            ...provided.draggableProps,\r\n            ...provided.dragHandleProps,\r\n            ref: provided.innerRef,\r\n          });\r\n        }\r\n        return <div />;\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Kanban } from \"types/kanban\";\r\nimport { useTaskTypes } from \"utils/task-type\";\r\nimport taskIcon from \"assets/task.svg\";\r\nimport bugIcon from \"assets/bug.svg\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Button, Card, Dropdown, Menu, Modal } from \"antd\";\r\nimport { useTasks } from \"utils/task\";\r\nimport {\r\n  useKanbansQueryKey,\r\n  useTasksModal,\r\n  useTasksSearchParams,\r\n} from \"screens/kanban/util\";\r\nimport { CreateTask } from \"screens/kanban/create-task\";\r\nimport { Task } from \"types/task\";\r\nimport { Mark } from \"components/mark\";\r\nimport { useDeleteKanban } from \"utils/kanban\";\r\nimport { Row } from \"components/lib\";\r\nimport { Drag, Drop, DropChild } from \"components/drag-and-drop\";\r\n\r\nconst TaskTypeIcon = ({ id }: { id: number }) => {\r\n  const { data: taskTypes } = useTaskTypes();\r\n  const name = taskTypes?.find((taskType) => taskType.id === id)?.name;\r\n  if (!name) {\r\n    return null;\r\n  }\r\n  return <img alt={\"task-icon\"} src={name === \"task\" ? taskIcon : bugIcon} />;\r\n};\r\n\r\nconst TaskCard = ({ task }: { task: Task }) => {\r\n  const { startEdit } = useTasksModal();\r\n  const { name: keyword } = useTasksSearchParams();\r\n  return (\r\n    <Card\r\n      onClick={() => startEdit(task.id)}\r\n      style={{ marginBottom: \"0.5rem\", cursor: \"pointer\" }}\r\n      key={task.id}\r\n    >\r\n      <p>\r\n        <Mark keyword={keyword} name={task.name} />\r\n      </p>\r\n      <TaskTypeIcon id={task.typeId} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const KanbanColumn = React.forwardRef<\r\n  HTMLDivElement,\r\n  { kanban: Kanban }\r\n>(({ kanban, ...props }, ref) => {\r\n  const { data: allTasks } = useTasks(useTasksSearchParams());\r\n  const tasks = allTasks?.filter((task) => task.kanbanId === kanban.id);\r\n  return (\r\n    <Container {...props} ref={ref}>\r\n      <Row between={true}>\r\n        <h3>{kanban.name}</h3>\r\n        <More kanban={kanban} key={kanban.id} />\r\n      </Row>\r\n      <TasksContainer>\r\n        <Drop\r\n          type={\"ROW\"}\r\n          direction={\"vertical\"}\r\n          droppableId={String(kanban.id)}\r\n        >\r\n          <DropChild style={{ minHeight: \"1rem\" }}>\r\n            {tasks?.map((task, taskIndex) => (\r\n              <Drag\r\n                key={task.id}\r\n                index={taskIndex}\r\n                draggableId={\"task\" + task.id}\r\n              >\r\n                <div>\r\n                  <TaskCard key={task.id} task={task} />\r\n                </div>\r\n              </Drag>\r\n            ))}\r\n          </DropChild>\r\n        </Drop>\r\n        <CreateTask kanbanId={kanban.id} />\r\n      </TasksContainer>\r\n    </Container>\r\n  );\r\n});\r\n\r\nconst More = ({ kanban }: { kanban: Kanban }) => {\r\n  const { mutateAsync } = useDeleteKanban(useKanbansQueryKey());\r\n  const startDelete = () => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      title: \"确定删除看板吗\",\r\n      onOk() {\r\n        return mutateAsync({ id: kanban.id });\r\n      },\r\n    });\r\n  };\r\n  const overlay = (\r\n    <Menu>\r\n      <Menu.Item>\r\n        <Button type={\"link\"} onClick={startDelete}>\r\n          删除\r\n        </Button>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n  return (\r\n    <Dropdown overlay={overlay}>\r\n      <Button type={\"link\"}>...</Button>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport const Container = styled.div`\r\n  min-width: 27rem;\r\n  border-radius: 6px;\r\n  background-color: rgb(244, 245, 247);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.7rem 0.7rem 1rem;\r\n  margin-right: 1.5rem;\r\n`;\r\n\r\nconst TasksContainer = styled.div`\r\n  overflow: scroll;\r\n  flex: 1;\r\n\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { IdSelect } from \"components/id-select\";\r\nimport { useTaskTypes } from \"utils/task-type\";\r\n\r\nexport const TaskTypeSelect = (\r\n  props: React.ComponentProps<typeof IdSelect>\r\n) => {\r\n  const { data: taskTypes } = useTaskTypes();\r\n  return <IdSelect options={taskTypes || []} {...props} />;\r\n};\r\n","import React from \"react\";\r\nimport { useTasksSearchParams } from \"screens/kanban/util\";\r\nimport { useSetUrlSearchParam } from \"utils/url\";\r\nimport { Row } from \"components/lib\";\r\nimport { Button, Input } from \"antd\";\r\nimport { UserSelect } from \"components/user-select\";\r\nimport { TaskTypeSelect } from \"components/task-type-select\";\r\n\r\nexport const SearchPanel = () => {\r\n  const searchParams = useTasksSearchParams();\r\n  const setSearchParams = useSetUrlSearchParam();\r\n  const reset = () => {\r\n    setSearchParams({\r\n      typeId: undefined,\r\n      processorId: undefined,\r\n      tagId: undefined,\r\n      name: undefined,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Row marginBottom={4} gap={true}>\r\n      <Input\r\n        style={{ width: \"20rem\" }}\r\n        placeholder={\"任务名\"}\r\n        value={searchParams.name}\r\n        onChange={(evt) => setSearchParams({ name: evt.target.value })}\r\n      />\r\n      <UserSelect\r\n        defaultOptionName={\"经办人\"}\r\n        value={searchParams.processorId}\r\n        onChange={(value) => setSearchParams({ processorId: value })}\r\n      />\r\n      <TaskTypeSelect\r\n        defaultOptionName={\"类型\"}\r\n        value={searchParams.typeId}\r\n        onChange={(value) => setSearchParams({ typeId: value })}\r\n      />\r\n      <Button onClick={reset}>清除筛选器</Button>\r\n    </Row>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useKanbansQueryKey, useProjectIdInUrl } from \"screens/kanban/util\";\r\nimport { useAddKanban } from \"utils/kanban\";\r\nimport { Input } from \"antd\";\r\nimport { Container } from \"screens/kanban/kanban-column\";\r\n\r\nexport const CreateKanban = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const projectId = useProjectIdInUrl();\r\n  const { mutateAsync: addKanban } = useAddKanban(useKanbansQueryKey());\r\n\r\n  const submit = async () => {\r\n    await addKanban({ name, projectId });\r\n    setName(\"\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Input\r\n        size={\"large\"}\r\n        placeholder={\"新建看板名称\"}\r\n        onPressEnter={submit}\r\n        value={name}\r\n        onChange={(evt) => setName(evt.target.value)}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n","import { useHttp } from \"utils/http\";\r\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\r\nimport { useAddConfig, useDeleteConfig } from \"utils/use-optimistic-options\";\r\nimport { Epic } from \"types/epic\";\r\n\r\nexport const useEpics = (param?: Partial<Epic>) => {\r\n  const client = useHttp();\r\n\r\n  return useQuery<Epic[]>([\"epics\", param], () =>\r\n    client(\"epics\", { data: param })\r\n  );\r\n};\r\n\r\nexport const useAddEpic = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n\r\n  return useMutation(\r\n    (params: Partial<Epic>) =>\r\n      client(`epics`, {\r\n        data: params,\r\n        method: \"POST\",\r\n      }),\r\n    useAddConfig(queryKey)\r\n  );\r\n};\r\n\r\nexport const useDeleteEpic = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n\r\n  return useMutation(\r\n    ({ id }: { id: number }) =>\r\n      client(`epics/${id}`, {\r\n        method: \"DELETE\",\r\n      }),\r\n    useDeleteConfig(queryKey)\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { IdSelect } from \"components/id-select\";\r\nimport { useEpics } from \"utils/epic\";\r\n\r\nexport const EpicSelect = (props: React.ComponentProps<typeof IdSelect>) => {\r\n  const { data: epics } = useEpics();\r\n  return <IdSelect options={epics || []} {...props} />;\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTasksModal, useTasksQueryKey } from \"screens/kanban/util\";\r\nimport { useDeleteTask, useEditTask } from \"utils/task\";\r\nimport { Button, Form, Input, Modal } from \"antd\";\r\nimport { UserSelect } from \"components/user-select\";\r\nimport { TaskTypeSelect } from \"components/task-type-select\";\r\nimport { EpicSelect } from \"components/epic-select\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nexport const TaskModal = () => {\r\n  const [form] = Form.useForm();\r\n  const { editingTaskId, editingTask, close } = useTasksModal();\r\n  const { mutateAsync: editTask, isLoading: editLoading } = useEditTask(\r\n    useTasksQueryKey()\r\n  );\r\n  const { mutate: deleteTask } = useDeleteTask(useTasksQueryKey());\r\n\r\n  const onCancel = () => {\r\n    close();\r\n    form.resetFields();\r\n  };\r\n\r\n  const onOk = async () => {\r\n    await editTask({ ...editingTask, ...form.getFieldsValue() });\r\n    close();\r\n  };\r\n\r\n  const startDelete = () => {\r\n    close();\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      title: \"确定删除任务吗\",\r\n      onOk() {\r\n        return deleteTask({ id: Number(editingTaskId) });\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue(editingTask);\r\n  }, [form, editingTask]);\r\n\r\n  return (\r\n    <Modal\r\n      forceRender={true}\r\n      onCancel={onCancel}\r\n      onOk={onOk}\r\n      okText={\"确认\"}\r\n      cancelText={\"取消\"}\r\n      confirmLoading={editLoading}\r\n      title={\"编辑任务\"}\r\n      visible={!!editingTaskId}\r\n    >\r\n      <Form {...layout} initialValues={editingTask} form={form}>\r\n        <Form.Item\r\n          label={\"任务名\"}\r\n          name={\"name\"}\r\n          rules={[{ required: true, message: \"请输入任务名\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label={\"任务组\"} name={\"epicId\"}>\r\n          <EpicSelect defaultOptionName={\"任务组\"} />\r\n        </Form.Item>\r\n        <Form.Item label={\"经办人\"} name={\"processorId\"}>\r\n          <UserSelect defaultOptionName={\"经办人\"} />\r\n        </Form.Item>\r\n        <Form.Item label={\"类型\"} name={\"typeId\"}>\r\n          <TaskTypeSelect />\r\n        </Form.Item>\r\n      </Form>\r\n      <div style={{ textAlign: \"right\" }}>\r\n        <Button\r\n          onClick={startDelete}\r\n          style={{ fontSize: \"14px\" }}\r\n          size={\"small\"}\r\n        >\r\n          删除\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useCallback } from \"react\";\r\nimport { useDocumentTitle } from \"utils\";\r\nimport {\r\n  useKanbanSearchParams,\r\n  useKanbansQueryKey,\r\n  useProjectInUrl,\r\n  useTasksQueryKey,\r\n  useTasksSearchParams,\r\n} from \"screens/kanban/util\";\r\nimport { KanbanColumn } from \"screens/kanban/kanban-column\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useKanbans, useReorderKanban } from \"utils/kanban\";\r\nimport { SearchPanel } from \"screens/kanban/search-panel\";\r\nimport { ScreenContainer } from \"components/lib\";\r\nimport { useReorderTask, useTasks } from \"utils/task\";\r\nimport { Spin } from \"antd\";\r\nimport { CreateKanban } from \"screens/kanban/create-kanban\";\r\nimport { TaskModal } from \"screens/kanban/task-modal\";\r\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\r\nimport { Drag, Drop, DropChild } from \"components/drag-and-drop\";\r\nimport { Profiler } from \"components/profiler\";\r\n\r\nexport const KanbanScreen = () => {\r\n  useDocumentTitle(\"看板列表\");\r\n\r\n  const { data: currentProject } = useProjectInUrl();\r\n  const { data: kanbans, isLoading: kanbanIsLoading } = useKanbans(\r\n    useKanbanSearchParams()\r\n  );\r\n  const { isLoading: taskIsLoading } = useTasks(useTasksSearchParams());\r\n  const isLoading = taskIsLoading || kanbanIsLoading;\r\n\r\n  const onDragEnd = useDragEnd();\r\n  return (\r\n    <Profiler id={\"看板页面\"}>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <ScreenContainer>\r\n          <h1>{currentProject?.name}看板</h1>\r\n          <SearchPanel />\r\n          {isLoading ? (\r\n            <Spin size={\"large\"} />\r\n          ) : (\r\n            <ColumnsContainer>\r\n              <Drop\r\n                type={\"COLUMN\"}\r\n                direction={\"horizontal\"}\r\n                droppableId={\"kanban\"}\r\n              >\r\n                <DropChild style={{ display: \"flex\" }}>\r\n                  {kanbans?.map((kanban, index) => (\r\n                    <Drag\r\n                      key={kanban.id}\r\n                      draggableId={\"kanban\" + kanban.id}\r\n                      index={index}\r\n                    >\r\n                      <KanbanColumn kanban={kanban} key={kanban.id} />\r\n                    </Drag>\r\n                  ))}\r\n                </DropChild>\r\n              </Drop>\r\n              <CreateKanban />\r\n            </ColumnsContainer>\r\n          )}\r\n          <TaskModal />\r\n        </ScreenContainer>\r\n      </DragDropContext>\r\n    </Profiler>\r\n  );\r\n};\r\n\r\nexport const useDragEnd = () => {\r\n  const { data: kanbans } = useKanbans(useKanbanSearchParams());\r\n  const { mutate: reorderKanban } = useReorderKanban(useKanbansQueryKey());\r\n  const { mutate: reorderTask } = useReorderTask(useTasksQueryKey());\r\n  const { data: allTasks = [] } = useTasks(useTasksSearchParams());\r\n  return useCallback(\r\n    ({ source, destination, type }: DropResult) => {\r\n      if (!destination) {\r\n        return;\r\n      }\r\n      // 看板排序\r\n      if (type === \"COLUMN\") {\r\n        const fromId = kanbans?.[source.index].id;\r\n        const toId = kanbans?.[destination.index].id;\r\n        if (!fromId || !toId || fromId === toId) {\r\n          return;\r\n        }\r\n        const type = destination.index > source.index ? \"after\" : \"before\";\r\n        reorderKanban({ fromId, referenceId: toId, type });\r\n      }\r\n      if (type === \"ROW\") {\r\n        const fromKanbanId = +source.droppableId;\r\n        const toKanbanId = +destination.droppableId;\r\n        const fromTask = allTasks.filter(\r\n          (task) => task.kanbanId === fromKanbanId\r\n        )[source.index];\r\n        const toTask = allTasks.filter((task) => task.kanbanId === toKanbanId)[\r\n          destination.index\r\n        ];\r\n        if (fromTask?.id === toTask?.id) {\r\n          return;\r\n        }\r\n        reorderTask({\r\n          fromId: fromTask?.id,\r\n          referenceId: toTask?.id,\r\n          fromKanbanId,\r\n          toKanbanId,\r\n          type:\r\n            fromKanbanId === toKanbanId && destination.index > source.index\r\n              ? \"after\"\r\n              : \"before\",\r\n        });\r\n      }\r\n    },\r\n    [kanbans, reorderKanban, allTasks, reorderTask]\r\n  );\r\n};\r\n\r\nexport const ColumnsContainer = styled(\"div\")`\r\n  display: flex;\r\n  overflow-x: scroll;\r\n  flex: 1;\r\n`;\r\n","import { useProjectIdInUrl } from \"screens/kanban/util\";\r\n\r\nexport const useEpicSearchParams = () => ({ projectId: useProjectIdInUrl() });\r\n\r\nexport const useEpicsQueryKey = () => [\"epics\", useEpicSearchParams()];\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Drawer, Form, Input, Spin } from \"antd\";\r\nimport { DrawerProps } from \"antd/es/drawer\";\r\nimport styled from \"@emotion/styled\";\r\nimport { ErrorBox } from \"components/lib\";\r\nimport { useAddEpic } from \"utils/epic\";\r\nimport { useEpicsQueryKey } from \"screens/epic/util\";\r\nimport { useProjectIdInUrl } from \"screens/kanban/util\";\r\n\r\nexport const CreateEpic = (\r\n  props: Pick<DrawerProps, \"visible\"> & { onClose: () => void }\r\n) => {\r\n  const { mutate: addEpic, isLoading, error } = useAddEpic(useEpicsQueryKey());\r\n  const [form] = Form.useForm();\r\n  const projectId = useProjectIdInUrl();\r\n\r\n  const onFinish = async (values: any) => {\r\n    await addEpic({ ...values, projectId });\r\n    props.onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.resetFields();\r\n  }, [form, props.visible]);\r\n\r\n  return (\r\n    <Drawer\r\n      visible={props.visible}\r\n      onClose={props.onClose}\r\n      forceRender={true}\r\n      destroyOnClose={true}\r\n      width={\"100%\"}\r\n    >\r\n      <Container>\r\n        {isLoading ? (\r\n          <Spin size={\"large\"} />\r\n        ) : (\r\n          <>\r\n            <h1>创建任务组</h1>\r\n            <ErrorBox error={error} />\r\n            <Form\r\n              form={form}\r\n              layout={\"vertical\"}\r\n              style={{ width: \"40rem\" }}\r\n              onFinish={onFinish}\r\n            >\r\n              <Form.Item\r\n                label={\"名称\"}\r\n                name={\"name\"}\r\n                rules={[{ required: true, message: \"请输入任务组名\" }]}\r\n              >\r\n                <Input placeholder={\"请输入任务组名称\"} />\r\n              </Form.Item>\r\n\r\n              <Form.Item style={{ textAlign: \"right\" }}>\r\n                <Button\r\n                  loading={isLoading}\r\n                  type={\"primary\"}\r\n                  htmlType={\"submit\"}\r\n                >\r\n                  提交\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  height: 80vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Row, ScreenContainer } from \"components/lib\";\r\nimport { useProjectInUrl } from \"screens/kanban/util\";\r\nimport { useDeleteEpic, useEpics } from \"utils/epic\";\r\nimport { Button, List, Modal } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\nimport { useTasks } from \"utils/task\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEpicSearchParams, useEpicsQueryKey } from \"screens/epic/util\";\r\nimport { Epic } from \"types/epic\";\r\nimport { CreateEpic } from \"screens/epic/create-epic\";\r\n\r\nexport const EpicScreen = () => {\r\n  const { data: currentProject } = useProjectInUrl();\r\n  const { data: epics } = useEpics(useEpicSearchParams());\r\n  const { data: tasks } = useTasks({ projectId: currentProject?.id });\r\n  const { mutate: deleteEpic } = useDeleteEpic(useEpicsQueryKey());\r\n  const [epicCreateOpen, setEpicCreateOpen] = useState(false);\r\n\r\n  const confirmDeleteEpic = (epic: Epic) => {\r\n    Modal.confirm({\r\n      title: `确定删除项目组：${epic.name}`,\r\n      content: \"点击确定删除\",\r\n      okText: \"确定\",\r\n      onOk() {\r\n        deleteEpic({ id: epic.id });\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ScreenContainer>\r\n      <Row between={true}>\r\n        <h1>{currentProject?.name}任务组</h1>\r\n        <Button onClick={() => setEpicCreateOpen(true)} type={\"link\"}>\r\n          创建任务组\r\n        </Button>\r\n      </Row>\r\n      <List\r\n        style={{ overflow: \"scroll\" }}\r\n        dataSource={epics}\r\n        itemLayout={\"vertical\"}\r\n        renderItem={(epic) => (\r\n          <List.Item>\r\n            <List.Item.Meta\r\n              title={\r\n                <Row between={true}>\r\n                  <span>{epic.name}</span>\r\n                  <Button onClick={() => confirmDeleteEpic(epic)} type={\"link\"}>\r\n                    删除\r\n                  </Button>\r\n                </Row>\r\n              }\r\n              description={\r\n                <div>\r\n                  <div>开始时间：{dayjs(epic.start).format(\"YYYY-MM-DD\")}</div>\r\n                  <div>结束时间：{dayjs(epic.end).format(\"YYYY-MM-DD\")}</div>\r\n                </div>\r\n              }\r\n            />\r\n            <div>\r\n              {tasks\r\n                ?.filter((task) => task.epicId === epic.id)\r\n                .map((task) => (\r\n                  <Link\r\n                    to={`/projects/${currentProject?.id}/kanban?editingTaskId=${task.id}`}\r\n                    key={task.id}\r\n                  >\r\n                    {task.name}\r\n                  </Link>\r\n                ))}\r\n            </div>\r\n          </List.Item>\r\n        )}\r\n      />\r\n      <CreateEpic\r\n        onClose={() => setEpicCreateOpen(false)}\r\n        visible={epicCreateOpen}\r\n      />\r\n    </ScreenContainer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Route, Routes, useLocation } from \"react-router\";\r\nimport { KanbanScreen } from \"screens/kanban\";\r\nimport { EpicScreen } from \"screens/epic\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Menu } from \"antd\";\r\n\r\nconst useRouteType = () => {\r\n  const units = useLocation().pathname.split(\"/\");\r\n  return units[units.length - 1];\r\n};\r\n\r\nexport const ProjectScreen = () => {\r\n  const routeType = useRouteType();\r\n  return (\r\n    <Container>\r\n      <Aside>\r\n        <Menu mode={\"inline\"} selectedKeys={[routeType]}>\r\n          <Menu.Item key={\"kanban\"}>\r\n            <Link to={\"kanban\"}>看板</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key={\"epic\"}>\r\n            <Link to={\"epic\"}>任务组</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Aside>\r\n      <Main>\r\n        <Routes>\r\n          {/*projects/:projectId/kanban*/}\r\n          <Route path={\"kanban\"} element={<KanbanScreen />} />\r\n          {/*projects/:projectId/epic*/}\r\n          <Route path={\"epic\"} element={<EpicScreen />} />\r\n          <Route index element={<KanbanScreen />} />\r\n        </Routes>\r\n      </Main>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Aside = styled.aside`\r\n  background-color: rgb(244, 245, 247);\r\n  display: flex;\r\n`;\r\n\r\nconst Main = styled.div`\r\n  box-shadow: -5px 0 5px -5px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 16rem 1fr;\r\n  width: 100%;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Drawer, Form, Input, Spin } from \"antd\";\r\nimport {\r\n  useProjectModal,\r\n  useProjectsQueryKey,\r\n} from \"screens/project-list/util\";\r\nimport { UserSelect } from \"components/user-select\";\r\nimport { useAddProject, useEditProject } from \"utils/project\";\r\nimport { ErrorBox } from \"components/lib\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nexport const ProjectModal = () => {\r\n  const { projectModalOpen, close, editingProject, isLoading } =\r\n    useProjectModal();\r\n  const useMutateProject = editingProject ? useEditProject : useAddProject;\r\n\r\n  const {\r\n    mutateAsync,\r\n    error,\r\n    isLoading: mutateLoading,\r\n  } = useMutateProject(useProjectsQueryKey());\r\n  const [form] = Form.useForm();\r\n  const onFinish = (values: any) => {\r\n    mutateAsync({ ...editingProject, ...values }).then(() => {\r\n      form.resetFields();\r\n      close();\r\n    });\r\n  };\r\n  const closeModal = () => {\r\n    form.resetFields();\r\n    close();\r\n  };\r\n\r\n  const title = editingProject ? \"编辑项目\" : \"创建项目\";\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue(editingProject);\r\n  }, [editingProject, form]);\r\n\r\n  return (\r\n    <Drawer\r\n      forceRender={true}\r\n      onClose={closeModal}\r\n      visible={projectModalOpen}\r\n      width={\"100%\"}\r\n    >\r\n      <Container>\r\n        {isLoading ? (\r\n          <Spin size={\"large\"} />\r\n        ) : (\r\n          <>\r\n            <h1>{title}</h1>\r\n            <ErrorBox error={error} />\r\n            <Form\r\n              form={form}\r\n              layout={\"vertical\"}\r\n              style={{ width: \"40rem\" }}\r\n              onFinish={onFinish}\r\n            >\r\n              <Form.Item\r\n                label={\"名称\"}\r\n                name={\"name\"}\r\n                rules={[{ required: true, message: \"请输入项目名\" }]}\r\n              >\r\n                <Input placeholder={\"请输入项目名称\"} />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label={\"部门\"}\r\n                name={\"organization\"}\r\n                rules={[{ required: true, message: \"请输入部门名\" }]}\r\n              >\r\n                <Input placeholder={\"请输入部门名\"} />\r\n              </Form.Item>\r\n\r\n              <Form.Item label={\"负责人\"} name={\"personId\"}>\r\n                <UserSelect defaultOptionName={\"负责人\"} />\r\n              </Form.Item>\r\n\r\n              <Form.Item style={{ textAlign: \"right\" }}>\r\n                <Button\r\n                  loading={mutateLoading}\r\n                  type={\"primary\"}\r\n                  htmlType={\"submit\"}\r\n                >\r\n                  提交\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  height: 80vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\nimport { Divider, List, Popover, Typography } from \"antd\";\r\nimport { useProjects } from \"utils/project\";\r\nimport styled from \"@emotion/styled\";\r\nimport { ButtonNoPadding } from \"components/lib\";\r\nimport { useProjectModal } from \"screens/project-list/util\";\r\n\r\nexport const ProjectPopover = () => {\r\n  const { open } = useProjectModal();\r\n  const { data: projects, refetch } = useProjects();\r\n  const pinnedProjects = projects?.filter((project) => project.pin);\r\n\r\n  const content = (\r\n    <ContentContainer>\r\n      <Typography.Text type={\"secondary\"}>收藏项目</Typography.Text>\r\n      <List>\r\n        {pinnedProjects?.map((project) => (\r\n          <List.Item key={project.id}>\r\n            <List.Item.Meta title={project.name} />\r\n          </List.Item>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <ButtonNoPadding onClick={open} type={\"link\"}>\r\n        创建项目\r\n      </ButtonNoPadding>\r\n    </ContentContainer>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      onVisibleChange={() => refetch()}\r\n      placement={\"bottom\"}\r\n      content={content}\r\n    >\r\n      <span>项目</span>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst ContentContainer = styled.div`\r\n  min-width: 30rem;\r\n`;\r\n","import React from \"react\";\r\nimport { Divider, List, Popover, Typography } from \"antd\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useUsers } from \"utils/user\";\r\n\r\nexport const UserPopover = () => {\r\n  const { data: users, refetch } = useUsers();\r\n\r\n  const content = (\r\n    <ContentContainer>\r\n      <Typography.Text type={\"secondary\"}>组员列表</Typography.Text>\r\n      <List>\r\n        {users?.map((user) => (\r\n          <List.Item key={user.id}>\r\n            <List.Item.Meta title={user.name} />\r\n          </List.Item>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n    </ContentContainer>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      onVisibleChange={() => refetch()}\r\n      placement={\"bottom\"}\r\n      content={content}\r\n    >\r\n      <span>组员</span>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst ContentContainer = styled.div`\r\n  min-width: 30rem;\r\n`;\r\n","import React from \"react\";\r\nimport { ProjectListScreen } from \"screens/project-list\";\r\nimport { useAuth } from \"context/auth-context\";\r\nimport { ReactComponent as SoftwareLogo } from \"assets/software-logo.svg\";\r\nimport styled from \"@emotion/styled\";\r\nimport { ButtonNoPadding, Row } from \"components/lib\";\r\nimport { Button, Dropdown, Menu } from \"antd\";\r\nimport { Route, Routes } from \"react-router\";\r\nimport { ProjectScreen } from \"screens/project\";\r\nimport { resetRoute } from \"utils\";\r\nimport { ProjectModal } from \"screens/project-list/project-modal\";\r\nimport { ProjectPopover } from \"components/project-popover\";\r\nimport { UserPopover } from \"components/user-popover\";\r\n\r\n/**\r\n * grid 和 flex 各自的应用场景\r\n * 1. 要考虑，是一维布局 还是 二维布局\r\n * 一般来说，一维布局用flex，二维布局用grid\r\n * 2. 是从内容出发还是从布局出发？\r\n * 从内容出发：你先有一组内容(数量一般不固定),然后希望他们均匀的分布在容器中，由内容自己的大小决定占据的空间\r\n * 从布局出发：先规划网格(数量一般比较固定)，然后再把元素往里填充\r\n * 从内容出发，用flex\r\n * 从布局出发，用grid\r\n *\r\n */\r\n\r\n// prop drilling\r\n\r\nexport default function AuthenticatedApp() {\r\n  return (\r\n    <Container>\r\n      <PageHeader />\r\n      <Main>\r\n        <Routes>\r\n          <Route path={\"projects\"} element={<ProjectListScreen />} />\r\n          <Route path={\"projects/:projectId/*\"} element={<ProjectScreen />} />\r\n          <Route index element={<ProjectListScreen />} />\r\n        </Routes>\r\n      </Main>\r\n      <ProjectModal />\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst PageHeader = () => {\r\n  return (\r\n    <Header between={true}>\r\n      <HeaderLeft gap={true}>\r\n        <ButtonNoPadding type={\"link\"} onClick={resetRoute}>\r\n          {/* <SoftwareLogo width={\"18rem\"} color={\"rgb(38, 132, 255)\"} /> */}\r\n          <span>首页</span>\r\n        </ButtonNoPadding>\r\n        <ProjectPopover />\r\n        <UserPopover />\r\n      </HeaderLeft>\r\n      <HeaderRight>\r\n        <User />\r\n      </HeaderRight>\r\n    </Header>\r\n  );\r\n};\r\n\r\nconst User = () => {\r\n  const { logout, user } = useAuth();\r\n  return (\r\n    <Dropdown\r\n      overlay={\r\n        <Menu>\r\n          <Menu.Item key={\"logout\"}>\r\n            <Button onClick={logout} type={\"link\"}>\r\n              登出\r\n            </Button>\r\n          </Menu.Item>\r\n        </Menu>\r\n      }\r\n    >\r\n      <Button type={\"link\"} onClick={(e) => e.preventDefault()}>\r\n        Hi, {user?.name}\r\n      </Button>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\n// temporal dead zone(暂时性死区)\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 6rem 1fr;\r\n  height: 100vh;\r\n`;\r\n\r\n// grid-area 用来给grid子元素起名字\r\nconst Header = styled(Row)`\r\n  padding: 3.2rem;\r\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.1);\r\n  z-index: 1;\r\n`;\r\nconst HeaderLeft = styled(Row)``;\r\nconst HeaderRight = styled.div``;\r\nconst Main = styled.main`\r\n  display: flex;\r\n  overflow: hidden;\r\n`;\r\n"],"sourceRoot":""}